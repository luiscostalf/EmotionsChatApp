apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "com.fingerprintjs.android.playground"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            def keystoreProperties = new Properties()
            def keystorePropsFile = file("keystore/keystore_config")

            if (keystorePropsFile.exists()) {
                file("keystore/keystore_config").withInputStream { keystoreProperties.load(it) }
                storeFile file("$keystoreProperties.storeFile")
                storePassword "$keystoreProperties.storePassword"
                keyAlias "$keystoreProperties.keyAlias"
                keyPassword "$keystoreProperties.keyPassword"
            } else {
                storeFile file("release.jks")
                storePassword System.getenv('KEYSTORE_PASSWORD')
                keyAlias System.getenv('RELEASE_SIGN_KEY_ALIAS')
                keyPassword System.getenv('RELEASE_SIGN_KEY_PASSWORD')
            }
        }
        releaseDummySign {
            storeFile file("release_dummy.jks")
            storePassword "password"
            keyAlias "key0"
            keyPassword "password"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        // build release app locally using a dummy signature
        releaseDummySign {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseDummySign
            matchingFallbacks = ['release']
        }
        // same as previous, but also profileable
        // when changing the name of the following build type, don't forget to update src/{this_build_type} dir
        releaseDummySignProfileable {
            initWith(buildTypes.releaseDummySign)
        }
    }
    namespace 'com.fingerprintjs.android.playground'

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "Playground-${variant.name}-${variant.versionName}.apk"
        }
    }


    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.7"
    }
}

dependencies {
    implementation project(":fingerprint")
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'

    def composeBom = platform('androidx.compose:compose-bom:2022.11.00')
    implementation composeBom
    androidTestImplementation composeBom
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    implementation 'androidx.compose.material:material-icons-extended'
    implementation 'androidx.activity:activity-compose:1.7.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
    implementation "androidx.navigation:navigation-compose:2.5.3"
    implementation 'androidx.core:core-splashscreen:1.0.1'

    implementation "com.google.accompanist:accompanist-pager:0.27.0"

    implementation 'com.google.dagger:dagger:2.44'
    kapt 'com.google.dagger:dagger-compiler:2.44'

    implementation 'com.google.code.gson:gson:2.10'
}
